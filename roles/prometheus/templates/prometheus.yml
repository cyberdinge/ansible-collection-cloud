---
# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).
 
  # The labels to add to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels: 
{% for key in prometheus_global_external_labels %}    {{ key }}: {{ prometheus_global_external_labels[key] }}
{% endfor %}



# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "/etc/prometheus/rules/*.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"
    static_configs:
      - targets: ["{{ hostvars[inventory_hostname].wireguard_address }}:9090"]

# filesd 
  - job_name: 'file_sd_configs'
    metrics_path: '/metrics'
    file_sd_configs:
      - files:
        -  "/etc/prometheus/scrapeconfig/*.yaml"
        -  "/etc/prometheus/scrapeconfig/*.yml"
        -  "/etc/prometheus/scrapeconfig/*.json"

# federation
  # - job_name: 'federate'
  #   scrape_interval: 15s
  #   honor_labels: true
  #   metrics_path: '/federate'
  #   params:
  #     'match[]':
  #       - '{job="prometheus"}'
  #       - '{__name__=~".*"}'
  #   static_configs:
  #     - targets:
  #       - 'vm1.projectdemo:9090'
  #       - 'vm2.projectdemo:9090'
  #       - 'vm3.projectdemo:9090'
 
# EOF