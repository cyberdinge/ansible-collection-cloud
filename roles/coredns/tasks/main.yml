---
# tasks file for cyberdinge.coredns

- name: create installdir "{{ coredns_installdir }}"
  file:
    state: directory
    path: "{{ coredns_installdir }}"

- name: Template Corefile to "{{ coredns_installdir }}/Corefile"
  ansible.builtin.template:
    src: Corefile
    dest: "{{ coredns_installdir }}/Corefile"
    owner: root
    group: root
    mode: '0600'
    force: yes

- with_items: "{{ coredns_zones }}"
  loop_control:
    loop_var: zone
  name: Template zone.txt to "{{ coredns_installdir }}/{{ zone.name }}.txt"
  ansible.builtin.template:
    src: zone.txt
    dest: "{{ coredns_installdir }}/{{ zone.name }}.txt"
    owner: root
    group: root
    mode: '0600'
    force: yes


- name: Template compose file to "{{ coredns_installdir }}/docker-compose.yml"
  ansible.builtin.template:
    src: docker-compose.yml
    dest: "{{ coredns_installdir }}/docker-compose.yml"
    owner: root
    group: root
    mode: '0600'
    force: yes

- name: Create and start services with compose file in "{{ coredns_installdir }}"
  ansible.builtin.shell:
    cmd: docker compose up -d --remove-orphans
    chdir: "{{ coredns_installdir }}"
  register: compose_output


# - name: set facts to notify prometheus about the scrape target
#   ansible.builtin.set_fact:
#     scrape_target_state: present
#     scrape_target_job: coredns
#     scrape_target_hostname: "{{ inventory_hostname }}"
#     scrape_target_domain: "{{ project_domain }}"    
#     scrape_target_network: "{{ wireguard_network_name }}"
#     scrape_target_url: "{{ coredns_bindip_metrics }}:{{ coredns_bindport_metrics }}"
#   changed_when: true # handler running when somethingchanged
#   notify:
#     - "prometheus - add static scrape file"  

# - name: Flush handlers
#   meta: flush_handlers  