---
# tasks file for cyberdinge.coturn

- name: install coturn via apt
  apt:
    state: present
    name: coturn

- name: "generating a x509 TLS certificate for the web-admin (/etc/turnserver.*) with subject {{ coturn_certificate_subject }}"
  ansible.builtin.command: 'openssl req -new -newkey rsa:4096 -days 36500 -nodes -x509 -subj "{{ coturn_certificate_subject }}" -keyout /etc/turnserver.key -out /etc/turnserver.crt'
  args:
    chdir: /etc/
    creates: /etc/turnserver.crt

- name: change permissions for certificate key
  ansible.builtin.file:
    path: /etc/turnserver.key
    owner: root
    group: turnserver
    mode: '0644'

- name: change permissions for certificate crt
  ansible.builtin.file:
    path: /etc/turnserver.crt
    owner: root
    group: turnserver
    mode: '0644'

- name: Set turnserver programm args in '/lib/systemd/system/coturn.service'
  ansible.builtin.lineinfile:
    path: /lib/systemd/system/coturn.service
    state: "present"
    regexp: '^ExecStart='
    line: >
      ExecStart=/usr/bin/turnserver -c /etc/turnserver.conf --pidfile=
      --web-admin
      --web-admin-ip={{ coturn_webadmin_ip }}
      --web-admin-port={{ coturn_webadmin_port }}
      --cert=/etc/turnserver.crt
      --pkey=/etc/turnserver.key
      --listening-port={{ coturn_listening_port }}
      --tls-listening-port={{ coturn_tls_listening_port }}
      --min-port={{ coturn_relay_udp_port_min }}
      --max-port={{ coturn_relay_udp_port_max }}
      --syslog
      --log-file={{ coturn_turnserver_logfile_path }}
      --verbose
      --server-name={{ coturn_realm }}
      --fingerprint
      --lt-cred-mech
      --realm={{ coturn_realm }}
  register: coturn_config

- name: Template coturn config to "/etc/turnserver.conf"
  changed_when: false
  ansible.builtin.template:
    src: turnserver.conf
    dest: "/etc/turnserver.conf"
    owner: root
    group: root
    mode: '0600'
    force: yes

- name: set username/password for the admin interface
  changed_when: false
  ansible.builtin.command: turnadmin --add-admin -u {{ coturn_admin_username }} -p {{ coturn_admin_password }}

- name: systemctl daemon-reload (when systemd config changed)
  when: coturn_config.changed
  changed_when: false
  ansible.builtin.command: systemctl daemon-reload


- name: Enable service coturn and ensure it is enabled and started and not masked (when systemd config changed)
  when: coturn_config.changed
  changed_when: false
  ansible.builtin.systemd:
    name: coturn
    enabled: yes
    masked: no
    state: restarted
  register: systemd_coturn

- name: add present turn_user
  with_items: "{{ coturn_users }}"
  loop_control:
    loop_var: turn_user
  when: turn_user.state == 'present'
  changed_when: false
  ansible.builtin.command: turnadmin --add -u {{ turn_user.username }} -p {{ turn_user.password }} -r {{ coturn_realm }}

- name: remove absent turn_user
  with_items: "{{ coturn_users }}"
  loop_control:
    loop_var: turn_user
  when: turn_user.state == 'absent'
  changed_when: false
  ansible.builtin.command: turnadmin --delete -u {{ turn_user.username }} -p {{ turn_user.password }}  -r {{ coturn_realm }}
