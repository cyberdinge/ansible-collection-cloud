# tasks file for cyberdinge.jitsi
# https://jitsi.github.io/handbook/docs/devops-guide/devops-guide-docker

- name: create installdir "{{ installdir }}"
  file:
    state: directory
    path: "{{ installdir }}"

# web
- name: create installdir "{{ installdir }}/web"
  file:
    state: directory
    path: "{{ installdir }}/web"

- name: create installdir "{{ installdir }}/web/crontabs"
  file:
    state: directory
    path: "{{ installdir }}/web/crontabs"

- name: create installdir "{{ installdir }}/transcripts"
  file:
    state: directory
    path: "{{ installdir }}/transcripts"

# prosody
- name: create installdir "{{ installdir }}/prosody"
  file:
    state: directory
    path: "{{ installdir }}/prosody"

- name: create installdir "{{ installdir }}/prosody/config"
  file:
    state: directory
    path: "{{ installdir }}/prosody/config"

- name: create installdir "{{ installdir }}/prosody/prosody-plugins-custom"
  file:
    state: directory
    path: "{{ installdir }}/prosody/prosody-plugins-custom"

# jicofo
- name: create installdir "{{ installdir }}/jicofo"
  file:
    state: directory
    path: "{{ installdir }}/jicofo"


# jvb
- name: create installdir "{{ installdir }}/jvb"
  file:
    state: directory
    path: "{{ installdir }}/jvb"

- name: Template .env file to "{{ installdir }}/.env"
  ansible.builtin.template:
    src: environment.env.txt
    dest: "{{ installdir }}/.env"
    owner: root
    group: root
    mode: '0600'
    force: yes

- name: Template compose file to "{{ installdir }}/docker-compose.yml"
  ansible.builtin.template:
    src: docker-compose.yml
    dest: "{{ installdir }}/docker-compose.yml"
    owner: root
    group: root
    mode: '0600'
    force: yes


- name: Create the network for provider.docker (will fail, when already exists, ignore it)
  ignore_errors: true
  changed_when: false
  ansible.builtin.shell: "docker network create {{ traefik_providers_docker_network }}"

- name: Create and start services with compose file in "{{ installdir }}"
  changed_when: false
  ansible.builtin.shell:
    cmd: docker compose up -d --remove-orphans
    chdir: "{{ installdir }}"
  register: compose_output
